<<<<<<< HEAD
#1 გააკეთეთ sololearn Fixing Data Types'ის ჩათვლით

#გავიარე



#2 ჩამოწერეთ რომელი data type'ბი იცით და ახსენით რა რას ემსახურება

#integer
# ძირითადად მათემატიკური ოპერაციებისთვის.

#string
#სტრინგი გამოიყენება სიტყვების, წინადადებების ნომრების და სხვა ტექსტის გამოსახულებისას.

#float
#საჭიროა იმისთვის, რომ გამოვითვალოთ თანხები, პროცენტული მაჩვენებლები და სხვა ფინანსური მონაცემები.
#როცა საჭიროა არამთლიან რიცხვებზე ოპერაციების ჩატარება



#3 თქვენი სიტყვებით ახსენით რაში გვჭირდება მონაცემთა ტიპის შეცვლა, მაგალითად string'ის integer'ად გადაქცევა

#თუ რიცხვი (მაგალითად, ასაკი, ფასი, ან რაოდენობა) სტრინგის სახითაა შენახული, პირდაპირი არითმეტიკული ოპერაციების ჩატარება შეუძლებელია. სტრინგის integer-ად გარდაქმნით შეგვიძლია ეს რიცხვები გამოვიყენოთ გამოთვლებში.



#4 მომხმარებელს შემოატანინეთ რაიმე მონაცემი, შეამოწმეთ როგორი ტიპისაა და ახსენით რატომაა ასე

user_input = input("შეიყვანეთ რაიმე მონაცემი: ")

print(f"თქვენ შეიყვანეთ მონაცემი: {user_input}")
print(f"მონაცემის ტიპი არის: {type(user_input)}")

#მომხმარებლის შეყვანილი მონაცემი სტრინგის ტიპისაა, რადგან input() ფუნქცია ყოველთვის სტრინგად იღებს მონაცემს. თუ სხვა ტიპის მონაცემები გვჭირდება, უნდა ვაქციოთ იგი შესაბამის ტიპად.



#5 გატესტეთ ეს კოდი პითონში:  დააკვირდით რა შედეგს გამოიტანს და ივარაუდეთ რატომ ქნა ასე

print(10 < 1)

=======
#1 გააკეთეთ sololearn Fixing Data Types'ის ჩათვლით

#გავიარე



#2 ჩამოწერეთ რომელი data type'ბი იცით და ახსენით რა რას ემსახურება

#integer
# ძირითადად მათემატიკური ოპერაციებისთვის.

#string
#სტრინგი გამოიყენება სიტყვების, წინადადებების ნომრების და სხვა ტექსტის გამოსახულებისას.

#float
#საჭიროა იმისთვის, რომ გამოვითვალოთ თანხები, პროცენტული მაჩვენებლები და სხვა ფინანსური მონაცემები.
#როცა საჭიროა არამთლიან რიცხვებზე ოპერაციების ჩატარება



#3 თქვენი სიტყვებით ახსენით რაში გვჭირდება მონაცემთა ტიპის შეცვლა, მაგალითად string'ის integer'ად გადაქცევა

#თუ რიცხვი (მაგალითად, ასაკი, ფასი, ან რაოდენობა) სტრინგის სახითაა შენახული, პირდაპირი არითმეტიკული ოპერაციების ჩატარება შეუძლებელია. სტრინგის integer-ად გარდაქმნით შეგვიძლია ეს რიცხვები გამოვიყენოთ გამოთვლებში.



#4 მომხმარებელს შემოატანინეთ რაიმე მონაცემი, შეამოწმეთ როგორი ტიპისაა და ახსენით რატომაა ასე

user_input = input("შეიყვანეთ რაიმე მონაცემი: ")

print(f"თქვენ შეიყვანეთ მონაცემი: {user_input}")
print(f"მონაცემის ტიპი არის: {type(user_input)}")

#მომხმარებლის შეყვანილი მონაცემი სტრინგის ტიპისაა, რადგან input() ფუნქცია ყოველთვის სტრინგად იღებს მონაცემს. თუ სხვა ტიპის მონაცემები გვჭირდება, უნდა ვაქციოთ იგი შესაბამის ტიპად.



#5 გატესტეთ ეს კოდი პითონში:  დააკვირდით რა შედეგს გამოიტანს და ივარაუდეთ რატომ ქნა ასე

print(10 < 1)

>>>>>>> 078f87372618cabe97856ddd7e397bf9bf3f8892
#ამან გამოიტანა false რადგან 1 ნაკლებია 10ზე